(dp1
S'output'
p2
S'<type \'exceptions.RuntimeError\'> Failure to connect, tried 5 times:\nTraceback (most recent call last):\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 446, in __init__\n    self._adapter = ADAPTERS[self._dbname](**kwargs)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py", line 60, in __call__\n    obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/mysql.py", line 132, in __init__\n    if do_connect: self.reconnect()\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/connection.py", line 125, in reconnect\n    self.connection = f()\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/mysql.py", line 130, in connector\n    return self.driver.connect(**driver_args)\n  File "/usr/local/lib/python2.7/dist-packages/pymysql/__init__.py", line 88, in Connect\n    return Connection(*args, **kwargs)\n  File "/usr/local/lib/python2.7/dist-packages/pymysql/connections.py", line 678, in __init__\n    self.connect()\n  File "/usr/local/lib/python2.7/dist-packages/pymysql/connections.py", line 921, in connect\n    raise exc\nOperationalError: (2003, "Can\'t connect to MySQL server on \'localhost\' ([Errno 101] Network is unreachable)")\n'
p3
sS'layer'
p4
S'/home/www-data/web2py/applications/pampers1/models/db.py'
p5
sS'code'
p6
S"# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\n## app configuration made easy. Look inside private/appconfig.ini\nfrom gluon.contrib.appconfig import AppConfig\n## once in production, remove reload=True to gain full speed\nmyconf = AppConfig(reload=True)\n\nif not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n    db = DAL(myconf.take('db.uri'), pool_size=myconf.take('db.pool_size', cast=int), check_reserved=['all'],migrate=True,fake_migrate=True)\nelse:\n    ## connect to Google BigTable (optional 'google:datastore://namespace')\n    db = DAL('google:datastore+ndb')\n    ## store sessions and tickets there\n    session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be 'controller/function.extension'\nresponse.generic_patterns = ['*.xml','*.json'] #if request.is_local else []\n## choose a style for forms\nresponse.formstyle = myconf.take('forms.formstyle')  # or 'bootstrap3_stacked' or 'bootstrap2' or other\nresponse.form_label_separator = myconf.take('forms.separator')\n\n\n## (optional) optimize handling of static files\n# response.optimize_css = 'concat,minify,inline'\n# response.optimize_js = 'concat,minify,inline'\n## (optional) static assets folder versioning\n# response.static_version = '0.0.0'\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Service, PluginManager\n\nauth = Auth(db)\nservice = Service()\nplugins = PluginManager()\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False)\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = 'logging' if request.is_local else myconf.take('smtp.server')\nmail.settings.sender = myconf.take('smtp.sender')\nmail.settings.login = myconf.take('smtp.login')\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table('mytable',Field('myfield','string'))\n##\n## Fields can be 'string','text','password','integer','double','boolean'\n##       'date','time','datetime','blob','upload', 'reference TABLENAME'\n## There is an implicit 'id integer autoincrement' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield='value')\n## >>> rows=db(db.mytable.myfield=='value').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\ndb.define_table('history',\n                Field('order_id', unique=True,length=20),\n                Field('ex_id',length=20),\n                Field('promo_id',length=20),\n                Field('barcode',length=20),\n                Field('user_name',length=40),\n                Field('mobile',length=13),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('order_date',length=13),\n                Field('product_name',length=20),\n                Field('data_date',length=20),\n                Field('channel',length=13),\n                Field('stage',length=20),\n                Field('city_class1',length=20),\n                Field('city_class2',length=20),\n                Field('memo1',length=20),\n                Field('memo2',length=20),\n                Field('address_bak',length=20)\n                )\n\ndb.define_table('history_order',\n                Field('mobilPhone',length=20,unique=True),\n                Field('out_tid',length=20),\n                Field('province',length=20),\n                Field('city',length=20),\n                Field('area',length=20),\n                Field('address',length=100,notnull=True),\n                Field('shop_id',length=20),\n                Field('storage_id',length=20),\n                Field('consignee',length=20),\n                Field('postcode',length=20),\n                Field('city_level',length=20),\n                Field('product_channel',length=20),\n                Field('express',length=20),\n                Field('order_type',length=20),\n                Field('process_status',length=20),\n                Field('pay_status',length=20),\n                Field('deliver_status',length=20),\n                Field('order_date',type='datetime'),\n                Field('data_date',length=20),\n                Field('plat_type',length=20),\n                Field('barCode',length=20),\n                Field('product_title',length=20),\n                Field('standard',length=20),\n                Field('backupinfo',length=20),\n                Field('examine_status',length=20),\n                Field('addr_hash')\n                )\n#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\ndb.define_table('db_map',\n                Field('table_type',length=20),\n                Field('table_name',length=40),\n                Field('field_name',length=40),\n                Field('field_id',length=40),\n                Field('field_order',type='integer'))\n\ndb.define_table('custom_order',\n                Field('order_id', unique=True,length=20),\n                Field('shop_name',length=40),\n                Field('ex_id',length=20),\n                Field('telephone',length=13),\n                Field('mobile',length=13),\n                Field('user_name',length=40),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('product_id',length=40),\n                Field('barcode',length=20),\n                Field('specification',length=40),\n                Field('ex_product_name',length=40),\n                Field('product_name',length=40),\n                Field('order_num',type='integer'),\n                Field('ex_spec',length=40),\n                Field('product_tag',length=40)\n                )\n\n#the address is not complete\ndb.define_table('address_lack',\n                Field('order_id', unique=True,length=20),\n                Field('shop_name',length=40),\n                Field('ex_id',length=20),\n                Field('telephone',length=13),\n                Field('mobile',length=13),\n                Field('user_name',length=40),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('product_id',length=40),\n                Field('barcode',length=20),\n                Field('specification',length=40),\n                Field('ex_product_name',length=40),\n                Field('product_name',length=40),\n                Field('order_num',type='integer'),\n                Field('ex_spec',length=40)\n                )\n\ndb.define_table('wrong_order',\n                Field('order_id', unique=True,length=20),\n                Field('shop_name',length=40),\n                Field('ex_id',length=20),\n                Field('telephone',length=13),\n                Field('mobile',length=13),\n                Field('user_name',length=40),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('product_id',length=40),\n                Field('barcode',length=20),\n                Field('specification',length=40),\n                Field('ex_product_name',length=40),\n                Field('product_name',length=40),\n                Field('order_num',type='integer'),\n                Field('ex_spec',length=40),\n                Field('wrong_reason',length=40),\n                Field('dup_ID',length=40),\n                Field('dup_ex',length=80),\n                Field('dup_address',length=80),\n                Field('dup_name',length=80),\n                Field('dup_phone',length=80)\n                )\n\n#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\ndb.define_table('pampers_order',\n                Field('order_id', unique=True,length=20),\n                Field('ex_id',length=20),\n                Field('user_name',length=40),\n                Field('mobile',length=13),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('pregnancy',length=40),\n                Field('product_piece',length=40),\n                Field('product_size',length=40),\n                Field('date_time',length=20),\n                Field('class_city',length=20)\n                )\ndb.define_table('pampers_history_dup',\n                Field('order_id', unique=True,length=20),\n                Field('ex_id',length=20),\n                Field('user_name',length=40),\n                Field('mobile',length=13),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('pregnancy',length=40),\n                Field('product_piece',length=40),\n                Field('product_size',length=40),\n                Field('date_time',length=20),\n                Field('wrong_reason',length=40),\n                Field('dup_ID',length=40),\n                Field('dup_ex',length=80),\n                Field('dup_address',length=80),\n                Field('dup_name',length=80),\n                Field('dup_phone',length=80)\n                )\ndb.define_table('pampers_self_dup',\n                Field('order_id', unique=True,length=20),\n                Field('ex_id',length=20),\n                Field('user_name',length=40),\n                Field('mobile',length=13),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('pregnancy',length=40),\n                Field('product_piece',length=40),\n                Field('product_size',length=40),\n                Field('date_time',length=20)\n                )\ndb.define_table('pampers_addr_lack',\n                Field('order_id', unique=True,length=20),\n                Field('ex_id',length=20),\n                Field('user_name',length=40),\n                Field('mobile',length=13),\n                Field('province',length=40),\n                Field('city',length=40),\n                Field('county',length=40),\n                Field('address',length=80),\n                Field('pregnancy',length=40),\n                Field('product_piece',length=40),\n                Field('product_size',length=40),\n                Field('date_time',length=20)\n                )\ndb.define_table('pampers_result',\n                Field('tag',length=40),\n                Field('distribution',length=20),\n                Field('Top4',length=20),\n                Field('A_city',length=20),\n                Field('B_city',length=20),\n                Field('C_city',length=20),\n                Field('D_city',length=20),\n                Field('village',length=20)\n                )\n###############################################################\ndb.define_table('trade',\n                Field('tid',length=20),\n                Field('out_tid',length=20),\n                Field('shop_id',length=20),\n                Field('storage_id',length=20),\n                Field('buyer_id',length=20),\n                Field('buyer_msg',length=20),\n                Field('buyer_email',length=20),\n                Field('buyer_alipay',length=20),\n                Field('seller_remark',length=20),\n                Field('consignee',length=20),\n                Field('address',length=100),\n                Field('addrbkp',length=100),\n                Field('postcode',length=20),\n                Field('telephone',length=20),\n                Field('mobilPhone',length=20),\n                Field('province',length=20),\n                Field('city',length=20),\n                Field('city_class',length=10),\n                Field('area',length=20),\n                Field('actual_freight_get',length=20),\n                Field('actual_RP',length=20),\n                Field('ship_method',length=20),\n                Field('express',length=20),\n                Field('is_invoiceOpened',length=20),\n                Field('invoice_type',length=20),\n                Field('invoice_money',length=20),\n                Field('invoice_title',length=20),\n                Field('invoice_msg',length=20),\n                Field('order_type',length=20),\n                Field('process_status',length=20),\n                Field('pay_status',length=20),\n                Field('deliver_status',length=20),\n                Field('is_COD',length=20),\n                Field('serverCost_COD',length=20),\n                Field('order_totalMoney',length=20),\n                Field('product_totalMoney',length=20),\n                Field('pay_method',length=20),\n                Field('pay_commission',length=20),\n                Field('pay_score',length=20),\n                Field('return_score',length=20),\n                Field('favorable_money',length=20),\n                Field('alipay_transaction_no',length=20),\n                Field('out_payNo',length=20),\n                Field('out_express_method',length=20),\n                Field('out_order_status',length=20),\n                Field('order_date',type='datetime'),\n                Field('pay_date',length=20),\n                Field('finish_date',length=20),\n                Field('plat_type',length=20),\n                Field('distributor_no',length=20),\n                Field('WuLiu',length=20),\n                Field('WuLiu_no',length=20),\n                Field('in_memo',length=20),\n                Field('other_remark',length=20),\n                Field('actual_freight_pay',length=20),\n                Field('ship_date_plan',length=20),\n                Field('deliver_date_plan',length=20),\n                Field('is_scorePay',length=20),\n                Field('is_needInvoice',length=20),\n                Field('barCode',length=20),\n                Field('product_title',length=20),\n                Field('standard',length=20),\n                Field('out_price',length=20),\n                Field('favorite_money',length=20),\n                Field('orderGoods_Num',length=20),\n                Field('gift_Num',length=20),\n                Field('cost_Price',length=20),\n                Field('t_id',length=20),\n                Field('product_stockout',length=20),\n                Field('is_Book',length=20),\n                Field('is_presell',length=20),\n                Field('is_Gift',length=20),\n                Field('avg_price',length=20),\n                Field('product_freight',length=20),\n                Field('shop__id',length=20),\n                Field('out__tid',length=20),\n                Field('out_productId',length=20),\n                Field('out_barCode',length=20),\n                Field('product_intro',length=20),\n                Field('status',length=20),\n                Field('tc_return',length=20),\n                Field('edb_return'),\n                Field('oti_return'),\n                Field('wrong_reason',length=20)\n                )\n\ndb.define_table('AllBarcode',\n                Field('product_num',length=20),\n                Field('product_id',length=20),\n                Field('product_size',length=20),\n                Field('product_name',length=20),\n                Field('bar_code',length=20),\n                Field('brand',length=20),\n                Field('product_classify',length=20),\n                )\ndb.define_table('WuLiuInfo',\n                Field('orderId',length=20),\n                Field('order_status',length=20),\n                Field('logisticCompany',length=20),\n                Field('trackingNo',length=20),\n                Field('updateTime',type='datetime')\n                )\n\n################### P&G ############################################\ndb.define_table('original_data',\n                Field('SB_Internal_Member_ID',length=20),\n                Field('Member_Account_ID',length=20),\n                Field('Reward_ID',length=20),\n                Field('Reward_Name',length=20),\n                Field('Reward_Value',length=20),\n                Field('Reward_Points',length=20),\n                Field('Reward_Internal_Cost',length=20),\n                Field('Issue_Date',length=20),\n                Field('Issue_Location',length=20),\n                Field('Redeemed_Date',length=20),\n                Field('Redeemed_Location',length=20),\n                Field('Cancel_Date',length=20),\n                Field('Expiration_Date',length=20),\n                Field('Reward_Barcode',length=20),\n                Field('First_Name',length=20),\n                Field('Last_Name',length=20),\n                Field('Address',length=20),\n                Field('City',length=20),\n                Field('trade_state',length=20),\n                Field('ZipCode',length=20),\n                Field('Email_Address',length=20),\n                Field('Mobil_Phone',length=20),\n                Field('IssuedFlag',length=20),\n                Field('RedeemFlag',length=20),\n                Field('CanceledFlag',length=20),\n                Field('REDEMPTION_STATUS',length=20),\n                Field('DLVRYNBR_REJRSN',length=20),\n                Field('DELIVERY_ADDRESS',length=80))\n\ndb.define_table('product_info',\n                Field('Reward_Name',length=20),\n                Field('Reward_Value',length=20),\n                Field('Reward_Points',length=20),\n                Field('Reward_Internal_Cost',length=20),\n                Field('product_id',length=20),\n                Field('reserve_field',length=20))\n\ndb.define_table('user_info',\n                Field('user_id',length=20),\n                Field('SB_Internal_Member_ID',length=20),\n                Field('Member_Account_ID',length=20),\n                Field('user_name',length=20),\n                Field('address',length=20),\n                Field('phone_num',length=20),\n                Field('city',length=20),\n                Field('province',length=20),\n                Field('zip_code',length=20),\n                Field('Country',length=20),\n                Field('reserve_field',length=20))\n\ndb.define_table('user2product',\n                Field('product_id',length=20),\n                Field('trials_count',length=20),\n                Field('user_id',length=20),\n                Field('reserve_field',length=20))\n################ babybox CD BBS  ###################################################\ndb.define_table('correct_BCB',\n                Field('order_id',length=20),\n                Field('ex_id',length=20),\n                Field('shop_name',length=20),\n                Field('telephone',length=20),\n                Field('cellphone',length=20),\n                Field('user_name',length=20),\n                Field('address',length=20),\n                Field('province',length=20),\n                Field('city',length=20),\n                Field('county',length=20),\n                Field('product_order',length=20),\n                Field('barcode',length=20),\n                Field('product_name',length=20),\n                Field('product_size',length=20),\n                Field('store_name',length=20),\n                Field('store_size',length=20),\n                Field('product_quantity',length=20))\n\ndb.define_table('incorrect_BCB',\n                Field('order_id',length=20),\n                Field('ex_id',length=20),\n                Field('shop_name',length=20),\n                Field('telephone',length=20),\n                Field('cellphone',length=20),\n                Field('user_name',length=20),\n                Field('address',length=20),\n                Field('province',length=20),\n                Field('city',length=20),\n                Field('county',length=20),\n                Field('product_order',length=20),\n                Field('barcode',length=20),\n                Field('product_name',length=20),\n                Field('product_size',length=20),\n                Field('store_name',length=20),\n                Field('store_size',length=20),\n                Field('product_quantity',length=20),\n                Field('wrong_reason',length=20),\n                Field('status1',length=20)\n                )\n\n## after defining tables, uncomment below to enable auditing\nauth.enable_record_versioning(db)\n"
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/www-data/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/www-data/web2py/applications/pampers1/models/db.py", line 19, in <module>\n    db = DAL(myconf.take(\'db.uri\'), pool_size=myconf.take(\'db.pool_size\', cast=int), check_reserved=[\'all\'],migrate=True,fake_migrate=True)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 174, in __call__\n    obj = super(MetaDAL, cls).__call__(*args, **kwargs)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 473, in __init__\n    "Failure to connect, tried %d times:\\n%s" % (attempts, tb)\nRuntimeError: Failure to connect, tried 5 times:\nTraceback (most recent call last):\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 446, in __init__\n    self._adapter = ADAPTERS[self._dbname](**kwargs)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py", line 60, in __call__\n    obj = super(AdapterMeta, cls).__call__(*args, **kwargs)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/mysql.py", line 132, in __init__\n    if do_connect: self.reconnect()\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/connection.py", line 125, in reconnect\n    self.connection = f()\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/mysql.py", line 130, in connector\n    return self.driver.connect(**driver_args)\n  File "/usr/local/lib/python2.7/dist-packages/pymysql/__init__.py", line 88, in Connect\n    return Connection(*args, **kwargs)\n  File "/usr/local/lib/python2.7/dist-packages/pymysql/connections.py", line 678, in __init__\n    self.connect()\n  File "/usr/local/lib/python2.7/dist-packages/pymysql/connections.py", line 921, in connect\n    raise exc\nOperationalError: (2003, "Can\'t connect to MySQL server on \'localhost\' ([Errno 101] Network is unreachable)")\n\n'
p11
s.